plugins {
    id 'java'
    id 'maven-publish'
}

group 'io.hanbings'
version '1.0.2-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // https://mvnrepository.com/artifact/io.javalin/javalin
    implementation 'io.javalin:javalin:4.6.1'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    // https://mvnrepository.com/artifact/org.fusesource.jansi/jansi
    implementation 'org.fusesource.jansi:jansi:2.4.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    implementation 'org.mongodb:mongo-java-driver:3.12.11'
    // https://mvnrepository.com/artifact/redis.clients/jedis
    implementation 'redis.clients:jedis:4.2.3'

    // https://mvnrepository.com/artifact/org.jline/jline
    implementation 'org.jline:jline:3.21.0'

    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    implementation 'net.java.dev.jna:jna:5.11.0'

    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation 'javax.mail:javax.mail-api:1.6.2'
    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
    implementation 'com.sun.mail:javax.mail:1.6.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

javadoc {
    options.addBooleanOption('html5', true)
    options.encoding('utf-8')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.convention('sources')
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.convention('javadocs')
    archiveClassifier.set('javadocs')
}

publishing {
    repositories {
        maven {
            url = uri((project.findProperty("repository_root_url") ?: System.getenv("REPOSITORY_ROOT_URL"))
                    + (project.version.toString().endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'))
            credentials {
                username = project.findProperty("repository_user") ?: System.getenv("REPOSITORY_USER")
                password = project.findProperty("repository_token") ?: System.getenv("REPOSITORY_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact(jar)
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
}